/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp msgInterface.xml -p msgInterface
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MSGINTERFACE_H
#define MSGINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface msg.interface
 */
class MsgInterfaceInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "msg.interface"; }

public:
    MsgInterfaceInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~MsgInterfaceInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> slot_content4Client(const QString &str_content)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(str_content);
        return asyncCallWithArgumentList(QStringLiteral("slot_content4Client"), argumentList);
    }

    inline QDBusPendingReply<> slot_content4ClientReturnVoid(const QString &str_content)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(str_content);
        return asyncCallWithArgumentList(QStringLiteral("slot_content4ClientReturnVoid"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void sig_receivedContent(const QString &in0);
};

namespace msg {
  typedef ::MsgInterfaceInterface interface;
}
#endif
